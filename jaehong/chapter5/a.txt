Classfile /Users/jaehong/Documents/java-basic-1/jaehong/chapter5/Sample.class
  Last modified 2023. 4. 17.; size 1046 bytes
  SHA-256 checksum 0ed37afb8327701d44e6d0c60e64743dd2622cb7b80a8df03d84081ff0e419f9
  Compiled from "Sample.java"
public class Sample
  minor version: 0
  major version: 62
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #20                         // Sample
  super_class: #2                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 4, attributes: 3
Constant pool:
   #1 = Methodref          #2.#3          // java/lang/Object."<init>":()V
   #2 = Class              #4             // java/lang/Object
   #3 = NameAndType        #5:#6          // "<init>":()V
   #4 = Utf8               java/lang/Object
   #5 = Utf8               <init>
   #6 = Utf8               ()V
   #7 = Fieldref           #8.#9          // java/lang/System.out:Ljava/io/PrintStream;
   #8 = Class              #10            // java/lang/System
   #9 = NameAndType        #11:#12        // out:Ljava/io/PrintStream;
  #10 = Utf8               java/lang/System
  #11 = Utf8               out
  #12 = Utf8               Ljava/io/PrintStream;
  #13 = Fieldref           #14.#15        // Direction.TOP:LDirection;
  #14 = Class              #16            // Direction
  #15 = NameAndType        #17:#18        // TOP:LDirection;
  #16 = Utf8               Direction
  #17 = Utf8               TOP
  #18 = Utf8               LDirection;
  #19 = Methodref          #20.#21        // Sample.ifStatement:(LDirection;)I
  #20 = Class              #22            // Sample
  #21 = NameAndType        #23:#24        // ifStatement:(LDirection;)I
  #22 = Utf8               Sample
  #23 = Utf8               ifStatement
  #24 = Utf8               (LDirection;)I
  #25 = Methodref          #26.#27        // java/io/PrintStream.println:(I)V
  #26 = Class              #28            // java/io/PrintStream
  #27 = NameAndType        #29:#30        // println:(I)V
  #28 = Utf8               java/io/PrintStream
  #29 = Utf8               println
  #30 = Utf8               (I)V
  #31 = Fieldref           #14.#32        // Direction.BOTTOM:LDirection;
  #32 = NameAndType        #33:#18        // BOTTOM:LDirection;
  #33 = Utf8               BOTTOM
  #34 = Fieldref           #14.#35        // Direction.LEFT:LDirection;
  #35 = NameAndType        #36:#18        // LEFT:LDirection;
  #36 = Utf8               LEFT
  #37 = Fieldref           #14.#38        // Direction.RIGHT:LDirection;
  #38 = NameAndType        #39:#18        // RIGHT:LDirection;
  #39 = Utf8               RIGHT
  #40 = Fieldref           #41.#42        // Sample$1.$SwitchMap$Direction:[I
  #41 = Class              #43            // Sample$1
  #42 = NameAndType        #44:#45        // $SwitchMap$Direction:[I
  #43 = Utf8               Sample$1
  #44 = Utf8               $SwitchMap$Direction
  #45 = Utf8               [I
  #46 = Methodref          #14.#47        // Direction.ordinal:()I
  #47 = NameAndType        #48:#49        // ordinal:()I
  #48 = Utf8               ordinal
  #49 = Utf8               ()I
  #50 = Class              #51            // java/lang/IncompatibleClassChangeError
  #51 = Utf8               java/lang/IncompatibleClassChangeError
  #52 = Methodref          #50.#3         // java/lang/IncompatibleClassChangeError."<init>":()V
  #53 = Utf8               Code
  #54 = Utf8               LineNumberTable
  #55 = Utf8               main
  #56 = Utf8               ([Ljava/lang/String;)V
  #57 = Utf8               StackMapTable
  #58 = Utf8               switchStatement
  #59 = Utf8               SourceFile
  #60 = Utf8               Sample.java
  #61 = Utf8               NestMembers
  #62 = Utf8               InnerClasses
{
  public Sample();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 1: 0

  public static void main(java.lang.String...);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
         3: getstatic     #13                 // Field Direction.TOP:LDirection;
         6: invokestatic  #19                 // Method ifStatement:(LDirection;)I
         9: invokevirtual #25                 // Method java/io/PrintStream.println:(I)V
        12: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
        15: getstatic     #31                 // Field Direction.BOTTOM:LDirection;
        18: invokestatic  #19                 // Method ifStatement:(LDirection;)I
        21: invokevirtual #25                 // Method java/io/PrintStream.println:(I)V
        24: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
        27: getstatic     #34                 // Field Direction.LEFT:LDirection;
        30: invokestatic  #19                 // Method ifStatement:(LDirection;)I
        33: invokevirtual #25                 // Method java/io/PrintStream.println:(I)V
        36: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
        39: getstatic     #37                 // Field Direction.RIGHT:LDirection;
        42: invokestatic  #19                 // Method ifStatement:(LDirection;)I
        45: invokevirtual #25                 // Method java/io/PrintStream.println:(I)V
        48: return
      LineNumberTable:
        line 4: 0
        line 5: 12
        line 6: 24
        line 7: 36
        line 8: 48

  public static int ifStatement(Direction);
    descriptor: (LDirection;)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #13                 // Field Direction.TOP:LDirection;
         4: if_acmpne     9
         7: iconst_1
         8: ireturn
         9: aload_0
        10: getstatic     #31                 // Field Direction.BOTTOM:LDirection;
        13: if_acmpne     18
        16: iconst_2
        17: ireturn
        18: aload_0
        19: getstatic     #34                 // Field Direction.LEFT:LDirection;
        22: if_acmpne     27
        25: iconst_3
        26: ireturn
        27: aload_0
        28: getstatic     #37                 // Field Direction.RIGHT:LDirection;
        31: if_acmpne     36
        34: iconst_4
        35: ireturn
        36: iconst_0
        37: ireturn
      LineNumberTable:
        line 11: 0
        line 12: 7
        line 14: 9
        line 15: 16
        line 17: 18
        line 18: 25
        line 20: 27
        line 21: 34
        line 23: 36
      StackMapTable: number_of_entries = 4
        frame_type = 9 /* same */
        frame_type = 8 /* same */
        frame_type = 8 /* same */
        frame_type = 8 /* same */

  public static int switchStatement(Direction);
    descriptor: (LDirection;)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #40                 // Field Sample$1.$SwitchMap$Direction:[I
         3: aload_0
         4: invokevirtual #46                 // Method Direction.ordinal:()I
         7: iaload
         8: tableswitch   { // 1 to 4
                       1: 48
                       2: 52
                       3: 56
                       4: 60
                 default: 40
            }
        40: new           #50                 // class java/lang/IncompatibleClassChangeError
        43: dup
        44: invokespecial #52                 // Method java/lang/IncompatibleClassChangeError."<init>":()V
        47: athrow
        48: iconst_1
        49: goto          61
        52: iconst_2
        53: goto          61
        56: iconst_3
        57: goto          61
        60: iconst_4
        61: ireturn
      LineNumberTable:
        line 27: 0
        line 28: 48
        line 29: 52
        line 30: 56
        line 31: 60
        line 27: 61
      StackMapTable: number_of_entries = 6
        frame_type = 40 /* same */
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 3 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
}
SourceFile: "Sample.java"
NestMembers:
  Sample$1
InnerClasses:
  static #41;                             // class Sample$1
